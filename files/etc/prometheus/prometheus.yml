# {{ansible_managed}}

global:
  scrape_interval: 15s
  scrape_timeout: 10s

scrape_configs:
  # Metrics about the prometheus server itself
  - job_name: prometheus
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance: backoffice

  # Metrics about promtail's operation
  - job_name: promtail
    static_configs:
      - targets: ['localhost:9080']
        labels:
          instance: backoffice

  # Metrics about the host, from node-exporter
  - job_name: host
    static_configs:
      - targets: ['localhost:9100']
        labels:
          instance: backoffice

  # Metrics about Apache, from apache-exporter
  - job_name: apache
    static_configs:
      - targets: ['localhost:9117']
        labels:
          instance: backoffice

  # Metrics about Husky Musher
  - job_name: husky-musher
    metrics_path: /husky-musher/metrics
    scheme: https
    static_configs:
      - targets: ['{{inventory_hostname}}']
        labels:
          instance: backoffice

  # Metrics from uWSGI apps
  - job_name: uwsgi
    file_sd_configs:
      - files:
          - /var/lib/prometheus/uwsgi-exporter/*.yaml
    relabel_configs:
      - target_label: instance
        replacement: backoffice

{% if production %}
remote_write:
  - url: https://prometheus-us-central1.grafana.net/api/prom/push
    basic_auth:
      username: 39753
      # In newer Prometheus versions I'd use password_file: here and let
      # Prometheus read the file directly instead of inlining the contents, but
      # the version we're using doesn't support that.  In the future, Ansible
      # can be tweaked to copy this managed file to the remote host and point
      # Prometheus at it directly.
      #   -trs, 8 Feb 2021
      password: '{{ lookup("file", "files/etc/prometheus/grafana-cloud-api-key") }}'
{% endif %}
