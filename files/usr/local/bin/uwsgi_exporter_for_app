#!/bin/bash
# Start a uwsgi_exporter, listening on a random port, for the given uWSGI app.
# Writes a Prometheus scrape config containing the listening port which is
# picked up using file discovery.
#
# Random number between 10,000 and 65,535 based on
# <https://stackoverflow.com/a/19602060>.
set -euo pipefail

app="${1:?uWSGI app name required as first argument}"
port=$(( ((RANDOM<<15)|RANDOM) % 55536 + 10000 ))

# Write scrape discovery file first, so we can exec cleanly later.  Worst case
# is that Prometheus tries to scrape a non-existent endpoint for a while until
# the service is restarted by systemd.
cat >/var/lib/prometheus/uwsgi-exporter/"$app".yaml <<END
---
- targets:
    - "localhost:$port"
END

# No need to check or catch if $port is in use, because systemd will restart us
# and we'll pick a new port next time around.
exec uwsgi_exporter \
    --web.listen-address "localhost:$port" \
    --stats.uri "unix:///run/uwsgi/app/$app/stats"
