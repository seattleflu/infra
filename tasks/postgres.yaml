---
- name: check if Postgres PGDG key is already installed
  stat:
    path: /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg
  register: pgdg_key_path

- name: download upstream Postgres GPG keys
  when: not pgdg_key_path.stat.exists
  get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /tmp
    checksum: sha1:403374e8f22266f67fe14b79b8257491dce75af7

- name: install upstream Postgres GPG keys
  when: not pgdg_key_path.stat.exists
  command:
    cmd: /usr/bin/gpg -o /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg --dearmor /tmp/ACCC4CF8.asc

- name: ensure apt sources list contains PGDG repo
  lineinfile:
    path: /etc/apt/sources.list.d/pgdg.list
    create: yes
    mode: 0644
    line: deb http://apt.postgresql.org/pub/repos/apt {{ansible_lsb.codename}}-pgdg main

- name: install Postgres client
  apt:
    update_cache: yes
    pkg:
      - postgresql-client-{{postgres_version}}

- name: install Postgres development headers for psycopg2
  apt:
    update_cache: yes
    pkg:
      - libpq-dev

- name: install Postgres server
  when: install_postgres_server
  apt:
    update_cache: yes
    pkg:
      - postgresql-{{postgres_version}}
      - postgresql-server-dev-{{postgres_version}}
      - postgresql-{{postgres_version}}-postgis-{{postgis_version}}
      - postgresql-{{postgres_version}}-repack

- name: copy postgresql.conf to Postgres server
  when: development and install_postgres_server
  copy:
    src: files/etc/postgresql/{{postgres_version}}/main/postgresql.conf
    dest: /etc/postgresql/{{postgres_version}}/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0644

- name: copy pg_hba.conf to Postgres server
  when: development and install_postgres_server
  copy:
    src: files/etc/postgresql/{{postgres_version}}/main/pg_hba.conf
    dest: /etc/postgresql/{{postgres_version}}/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0644

- name: restart Postgres systemd service
  when: install_postgres_server
  command:
    cmd: systemctl restart postgresql@{{postgres_version}}-main

- name: generate a random Postgres superuser password
  when: install_postgres_server
  set_fact:
    superuser_password: "{{ lookup('password', '/dev/null length=20') }}"

- name: set Postgres superuser password
  when: install_postgres_server
  shell:
    cmd: su - postgres -c "psql -c \"alter role postgres with encrypted password '{{superuser_password}}'\""

- name: Postgres superuser password set to
  when: install_postgres_server
  debug:
    msg: "{{superuser_password}}"
